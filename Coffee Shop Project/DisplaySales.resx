<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        DE2hUVeL6P8BO2ZmPRSYsXkAAAAASUVORK5CYII=
</value>
  </data>
</root>